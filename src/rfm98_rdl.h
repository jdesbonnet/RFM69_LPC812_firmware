/**
 * C/C++ header file for RFM98
 * Auto generated by ICRDL v0.1. 
 * Do not edit. Instead edit ICRDL XML file and regenerate.
 */

/** Register RFM98_FIFO at address 0x00 **/
#define RFM98_FIFO (0x00)                         /* FIFO register address */

/** Register RFM98_OPMODE (Operation Mode) at address 0x01 **/
#define RFM98_OPMODE (0x01)                       /* OPMODE register address */
#define RFM98_OPMODE_LoRaMode (1<<7)              /*  */
#define RFM98_OPMODE_LoRaMode_MASK (0x1<<7)       /* LoRaMode bit mask */
#define RFM98_OPMODE_LoRaMode_VALUE(x) (((x)<<7)&RFM98_OPMODE_LoRaMode_MASK)
#define RFM98_OPMODE_ModulationType_MASK (0x3<<5) /* ModulationType bit mask */
#define RFM98_OPMODE_ModulationType_VALUE(x) (((x)<<5)&RFM98_OPMODE_ModulationType_MASK)
#define RFM98_OPMODE_ModulationType_FSK (0)       /*  */
#define RFM98_OPMODE_ModulationType_OOK (1)       /*  */
#define RFM98_OPMODE_LowFrequencyMode (1<<3)      /*  */
#define RFM98_OPMODE_LowFrequencyMode_MASK (0x1<<3) /* LowFrequencyMode bit mask */
#define RFM98_OPMODE_LowFrequencyMode_VALUE(x) (((x)<<3)&RFM98_OPMODE_LowFrequencyMode_MASK)
#define RFM98_OPMODE_FSK_MASK (0x7)               /* FSK bit mask */
#define RFM98_OPMODE_FSK_VALUE(x) (((x)<<0)&RFM98_OPMODE_FSK_MASK)
#define RFM98_OPMODE_FSK_SLEEP (0)                /* Sleep mode */
#define RFM98_OPMODE_FSK_STDBY (1)                /* Standby mode */
#define RFM98_OPMODE_FSK_FS (2)                   /* Frequency Synthesis mode */
#define RFM98_OPMODE_FSK_TX (3)                   /* Transmitter mode */
#define RFM98_OPMODE_FSK_FSRX (4)                 /* Receiver mode */
#define RFM98_OPMODE_FSK_RX (5)                   /* Receiver mode */
#define RFM98_OPMODE_LoRa_LF (1<<3)               /*  */
#define RFM98_OPMODE_LoRa_LF_MASK (0x1<<3)        /* LoRa_LF bit mask */
#define RFM98_OPMODE_LoRa_LF_VALUE(x) (((x)<<3)&RFM98_OPMODE_LoRa_LF_MASK)
#define RFM98_OPMODE_LoRa_MASK (0x7)              /* LoRa bit mask */
#define RFM98_OPMODE_LoRa_VALUE(x) (((x)<<0)&RFM98_OPMODE_LoRa_MASK)
#define RFM98_OPMODE_LoRa_SLEEP (0)               /* Sleep mode */
#define RFM98_OPMODE_LoRa_STDBY (1)               /* Standby mode */
#define RFM98_OPMODE_LoRa_FSTX (2)                /* Frequency Synthesis mode */
#define RFM98_OPMODE_LoRa_TX (3)                  /* Transmitter mode */
#define RFM98_OPMODE_LoRa_FSRX (4)                /* Receiver mode */
#define RFM98_OPMODE_LoRa_RXCONTINUOUS (5)        /* receiver continuous */
#define RFM98_OPMODE_LoRa_RXSINGLE (6)            /* receive single */
#define RFM98_OPMODE_LoRa_CAD (7)                 /* channel activity detect */

/** Register RFM98_BITRATEMSB (MSB of Bit Rate (Chip Rate when Manchesterencoing is enabled)) at address 0x02 **/
#define RFM98_BITRATEMSB (0x02)                   /* BITRATEMSB register address */

/** Register RFM98_BITRATELSB (LSB of Bit Rate (Chip Rate when Manchesterencoing is enabled)) at address 0x03 **/
#define RFM98_BITRATELSB (0x03)                   /* BITRATELSB register address */

/** Register RFM98_FDEVMSB (MSB of frequency deviation) at address 0x04 **/
#define RFM98_FDEVMSB (0x04)                      /* FDEVMSB register address */

/** Register RFM98_FDEVMSB (LSB of frequency deviation) at address 0x05 **/
#define RFM98_FDEVMSB (0x05)                      /* FDEVMSB register address */

/** Register RFM98_FRFMSB (MSB of the RF carrier frequency) at address 0x06 **/
#define RFM98_FRFMSB (0x06)                       /* FRFMSB register address */

/** Register RFM98_FRFMID (Middle byte of the RF carrier frequency) at address 0x07 **/
#define RFM98_FRFMID (0x07)                       /* FRFMID register address */

/** Register RFM98_FRFLSB (LSB of the RF carrier frequency) at address 0x08 **/
#define RFM98_FRFLSB (0x08)                       /* FRFLSB register address */

/** Register RFM98_PACONFIG (Power Amplifier (PA) power configuration) at address 0x09 **/
#define RFM98_PACONFIG (0x09)                     /* PACONFIG register address */
#define RFM98_PACONFIG_PaSelect (1<<7)            /* Output on PA_BOOST pin if PaSelect=1 */
#define RFM98_PACONFIG_PaSelect_MASK (0x1<<7)     /* PaSelect bit mask */
#define RFM98_PACONFIG_PaSelect_VALUE(x) (((x)<<7)&RFM98_PACONFIG_PaSelect_MASK)
#define RFM98_PACONFIG_PaSelect_ON (1)            /*  */
#define RFM98_PACONFIG_MaxPower_MASK (0x7<<4)     /* MaxPower bit mask */
#define RFM98_PACONFIG_MaxPower_VALUE(x) (((x)<<4)&RFM98_PACONFIG_MaxPower_MASK)
#define RFM98_PACONFIG_OutputPower_MASK (0xf)     /* OutputPower bit mask */
#define RFM98_PACONFIG_OutputPower_VALUE(x) (((x)<<0)&RFM98_PACONFIG_OutputPower_MASK)

/** Register RFM98_PARAMP (Control of PA ramp time, low phase noise PLL) at address 0x0a **/
#define RFM98_PARAMP (0x0a)                       /* PARAMP register address */
#define RFM98_PARAMP_MASK (0xf)                   /*  bit mask */
#define RFM98_PARAMP_VALUE(x) (((x)<<0)&RFM98_PARAMP_MASK)
#define RFM98_PARAMP_3400us (0)                   /*  */
#define RFM98_PARAMP_2000us (1)                   /*  */
#define RFM98_PARAMP_1000us (2)                   /*  */
#define RFM98_PARAMP_500us (3)                    /*  */
#define RFM98_PARAMP_250us (4)                    /*  */
#define RFM98_PARAMP_125us (5)                    /*  */
#define RFM98_PARAMP_100us (6)                    /*  */
#define RFM98_PARAMP_62us (7)                     /*  */
#define RFM98_PARAMP_50us (8)                     /*  */
#define RFM98_PARAMP_40us (9)                     /*  */
#define RFM98_PARAMP_31us (10)                    /*  */
#define RFM98_PARAMP_25us (11)                    /*  */
#define RFM98_PARAMP_20us (12)                    /*  */
#define RFM98_PARAMP_15us (13)                    /*  */
#define RFM98_PARAMP_12us (14)                    /*  */
#define RFM98_PARAMP_10us (15)                    /*  */

/** Register RFM98_OCP (Over current protection (OCP) for the PA configuration) at address 0x0b **/
#define RFM98_OCP (0x0b)                          /* OCP register address */
#define RFM98_OCP_OcpOn (1<<4)                    /* Enable OCP */
#define RFM98_OCP_OcpOn_MASK (0x1<<4)             /* OcpOn bit mask */
#define RFM98_OCP_OcpOn_VALUE(x) (((x)<<4)&RFM98_OCP_OcpOn_MASK)
#define RFM98_OCP_OcpTrim_MASK (0xf)              /* OcpTrim bit mask */
#define RFM98_OCP_OcpTrim_VALUE(x) (((x)<<0)&RFM98_OCP_OcpTrim_MASK)

/** Register RFM98_LNA (Low Noise Amplifier (LNA) configuration) at address 0x0c **/
#define RFM98_LNA (0x0c)                          /* LNA register address */
#define RFM98_LNA_LnaZin (1<<7)                   /* LNA input impedence 0=50ohms; 1=200ohms */
#define RFM98_LNA_LnaZin_MASK (0x1<<7)            /* LnaZin bit mask */
#define RFM98_LNA_LnaZin_VALUE(x) (((x)<<7)&RFM98_LNA_LnaZin_MASK)
#define RFM98_LNA_LnaCurrentGain_MASK (0x7<<3)    /* LnaCurrentGain bit mask */
#define RFM98_LNA_LnaCurrentGain_VALUE(x) (((x)<<3)&RFM98_LNA_LnaCurrentGain_MASK)
#define RFM98_LNA_LnaGainSelect_MASK (0x7)        /* LnaGainSelect bit mask */
#define RFM98_LNA_LnaGainSelect_VALUE(x) (((x)<<0)&RFM98_LNA_LnaGainSelect_MASK)
#define RFM98_LNA_LnaGainSelect_AGC (0)           /* Set by AGC loop */
#define RFM98_LNA_LnaGainSelect_G1 (1)            /* higest gain */
#define RFM98_LNA_LnaGainSelect_G2 (2)            /* higest gain - 6dB */
#define RFM98_LNA_LnaGainSelect_G3 (3)            /* higest gain - 12dB */
#define RFM98_LNA_LnaGainSelect_G4 (4)            /* higest gain - 23dB */
#define RFM98_LNA_LnaGainSelect_G5 (5)            /* higest gain - 36dB */
#define RFM98_LNA_LnaGainSelect_G6 (6)            /* higest gain - 48dB */

/** Register RFM98_FIFOADDRPTR (FIFO SPI pointer) at address 0x0d **/
#define RFM98_FIFOADDRPTR (0x0d)                  /* FIFOADDRPTR register address */

/** Register RFM98_FIFOTXBASEADDR (Start Tx data) at address 0x0e **/
#define RFM98_FIFOTXBASEADDR (0x0e)               /* FIFOTXBASEADDR register address */

/** Register RFM98_FIFORXBASEADDR (Start Rx data) at address 0x0f **/
#define RFM98_FIFORXBASEADDR (0x0f)               /* FIFORXBASEADDR register address */

/** Register RFM98_FIFORXCURRENT (Start address (in data buffer) of last packet received.) at address 0x10 **/
#define RFM98_FIFORXCURRENT (0x10)                /* FIFORXCURRENT register address */

/** Register RFM98_IRQFLAGS (IRQ Flags) at address 0x12 **/
#define RFM98_IRQFLAGS (0x12)                     /* IRQFLAGS register address */
#define RFM98_IRQFLAGS_RxTimeout (1<<7)           /* Timeout interrupt. Write op clears interrupt. */
#define RFM98_IRQFLAGS_RxTimeout_MASK (0x1<<7)    /* RxTimeout bit mask */
#define RFM98_IRQFLAGS_RxTimeout_VALUE(x) (((x)<<7)&RFM98_IRQFLAGS_RxTimeout_MASK)
#define RFM98_IRQFLAGS_RxDone (1<<6)              /* Packetreception complete interrupt. Write op clears interrupt. */
#define RFM98_IRQFLAGS_RxDone_MASK (0x1<<6)       /* RxDone bit mask */
#define RFM98_IRQFLAGS_RxDone_VALUE(x) (((x)<<6)&RFM98_IRQFLAGS_RxDone_MASK)
#define RFM98_IRQFLAGS_PayloadCrcError (1<<5)     /* Payload CRC error interrupt. */
#define RFM98_IRQFLAGS_PayloadCrcError_MASK (0x1<<5) /* PayloadCrcError bit mask */
#define RFM98_IRQFLAGS_PayloadCrcError_VALUE(x) (((x)<<5)&RFM98_IRQFLAGS_PayloadCrcError_MASK)
#define RFM98_IRQFLAGS_ValidHeader (1<<4)         /* Valid header received in RX. */
#define RFM98_IRQFLAGS_ValidHeader_MASK (0x1<<4)  /* ValidHeader bit mask */
#define RFM98_IRQFLAGS_ValidHeader_VALUE(x) (((x)<<4)&RFM98_IRQFLAGS_ValidHeader_MASK)
#define RFM98_IRQFLAGS_TxDone (1<<3)              /*  */
#define RFM98_IRQFLAGS_TxDone_MASK (0x1<<3)       /* TxDone bit mask */
#define RFM98_IRQFLAGS_TxDone_VALUE(x) (((x)<<3)&RFM98_IRQFLAGS_TxDone_MASK)
#define RFM98_IRQFLAGS_CadDone (1<<2)             /* CAD complete. */
#define RFM98_IRQFLAGS_CadDone_MASK (0x1<<2)      /* CadDone bit mask */
#define RFM98_IRQFLAGS_CadDone_VALUE(x) (((x)<<2)&RFM98_IRQFLAGS_CadDone_MASK)
#define RFM98_IRQFLAGS_FhssChangeChannel (1<<1)   /*  */
#define RFM98_IRQFLAGS_FhssChangeChannel_MASK (0x1<<1) /* FhssChangeChannel bit mask */
#define RFM98_IRQFLAGS_FhssChangeChannel_VALUE(x) (((x)<<1)&RFM98_IRQFLAGS_FhssChangeChannel_MASK)
#define RFM98_IRQFLAGS_CadDetected (1<<0)         /*  */
#define RFM98_IRQFLAGS_CadDetected_MASK (0x1)     /* CadDetected bit mask */
#define RFM98_IRQFLAGS_CadDetected_VALUE(x) (((x)<<0)&RFM98_IRQFLAGS_CadDetected_MASK)

/** Register RFM98_RXNBBYTES (Number of payload bytes of last packet received) at address 0x13 **/
#define RFM98_RXNBBYTES (0x13)                    /* RXNBBYTES register address */


